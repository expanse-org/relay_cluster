// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package types

import (
	"encoding/json"

	"github.com/ethereum/go-ethereum/common"
)

// MarshalJSON marshals as JSON.
func (w WhiteListUser) MarshalJSON() ([]byte, error) {
	type WhiteListUser struct {
		Owner      common.Address `json:"owner"`
		CreateTime int64          `json:"create_time"`
	}
	var enc WhiteListUser
	enc.Owner = w.Owner
	enc.CreateTime = w.CreateTime
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (w *WhiteListUser) UnmarshalJSON(input []byte) error {
	type WhiteListUser struct {
		Owner      *common.Address `json:"owner"`
		CreateTime *int64          `json:"create_time"`
	}
	var dec WhiteListUser
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Owner != nil {
		w.Owner = *dec.Owner
	}
	if dec.CreateTime != nil {
		w.CreateTime = *dec.CreateTime
	}
	return nil
}
